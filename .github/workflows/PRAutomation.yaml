- name: Generate PR title and body using ChatGPT
  id: chatgpt
  env:
    OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  run: |
    # Limit the diff size to avoid token overflow
    CHANGES=$(head -c 5000 changes.txt | sed 's/"/\\"/g')

    echo "📄 Sending the following to ChatGPT:"
    echo "$CHANGES"

    JSON_PAYLOAD=$(cat <<EOF
{
  "model": "gpt-4",
  "messages": [
    {
      "role": "system",
      "content": "You are a helpful assistant that writes concise and clear GitHub pull request titles and descriptions."
    },
    {
      "role": "user",
      "content": "Generate a clear and professional pull request title and description based on the following code changes:\n\n$CHANGES"
    }
  ]
}
EOF
)

    RESPONSE=$(curl -s https://api.openai.com/v1/chat/completions \
      -H "Authorization: Bearer $OPENAI_API_KEY" \
      -H "Content-Type: application/json" \
      -d "$JSON_PAYLOAD")

    echo "🔍 OpenAI Response:"
    echo "$RESPONSE" | jq .

    GENERATED=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')

    # Defensive: if nothing is returned, fail early
    if [[ -z "$GENERATED" || "$GENERATED" == "null" ]]; then
      echo "❌ No content returned from ChatGPT"
      exit 1
    fi

    TITLE=$(echo "$GENERATED" | head -n 1 | tr -d '\r')
    BODY=$(echo "$GENERATED" | tail -n +2)

    echo "🎯 Title: $TITLE"
    echo "📝 Body:"
    echo "$BODY"

    echo "title<<EOF" >> $GITHUB_OUTPUT
    echo "$TITLE" >> $GITHUB_OUTPUT
    echo "EOF" >> $GITHUB_OUTPUT

    echo "body<<EOF" >> $GITHUB_OUTPUT
    echo "$BODY" >> $GITHUB_OUTPUT
    echo "EOF" >> $GITHUB_OUTPUT
